"""empty message

Revision ID: fe0cd3f6f211
Revises: bf7ada70e567
Create Date: 2020-10-23 16:06:37.196893

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from application.models import *
from application.tracker.models import *

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe0cd3f6f211'
down_revision = 'bf7ada70e567'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task', sa.Column('description', sa.String(), nullable=False))
    op.add_column('task', sa.Column('key', sa.String(), nullable=False))
    op.add_column('task', sa.Column('kwargs', sqlalchemy_utils.types.json.JSONType(), nullable=True))
    op.add_column('task', sa.Column('last_fail', sa.DateTime(), nullable=True))
    op.add_column('task', sa.Column('last_success', sa.DateTime(), nullable=True))
    op.add_column('task', sa.Column('module', sa.String(), nullable=False))
    op.add_column('task', sa.Column('options', sqlalchemy_utils.types.json.JSONType(), nullable=True))
    op.add_column('task', sa.Column('periodic', sa.Boolean(), nullable=True))
    op.add_column('task', sa.Column('startup', sa.Boolean(), nullable=True))
    op.create_unique_constraint('uniq_name_key_for_task', 'task', ['name', 'key'])
    op.drop_constraint('task_name_key', 'task', type_='unique')
    op.drop_column('task', 'last_run')
    op.drop_column('task', 'last_failed')
    op.drop_column('task', 'run_on_startup')
    op.add_column('task_run', sa.Column('kwargs', sqlalchemy_utils.types.json.JSONType(), nullable=True))
    op.add_column('task_run', sa.Column('singleton', sa.Boolean(), nullable=True))
    op.drop_column('task_run', 'args')
    op.drop_column('task_run', 'periodic')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task_run', sa.Column('periodic', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task_run', sa.Column('args', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('task_run', 'singleton')
    op.drop_column('task_run', 'kwargs')
    op.add_column('task', sa.Column('run_on_startup', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('last_failed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('task', sa.Column('last_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_unique_constraint('task_name_key', 'task', ['name'])
    op.drop_constraint('uniq_name_key_for_task', 'task', type_='unique')
    op.drop_column('task', 'startup')
    op.drop_column('task', 'periodic')
    op.drop_column('task', 'options')
    op.drop_column('task', 'module')
    op.drop_column('task', 'last_success')
    op.drop_column('task', 'last_fail')
    op.drop_column('task', 'kwargs')
    op.drop_column('task', 'key')
    op.drop_column('task', 'description')
    # ### end Alembic commands ###
